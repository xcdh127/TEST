package codeTop;
/*给你一个非负整数 x ，计算并返回 x 的 算术平方根 。
由于返回类型是整数，结果只保留 整数部分 ，小数部分将被 舍去 。
注意：不允许使用任何内置指数函数和算符，例如 pow(x, 0.5) 或者 x ** 0.5 。
示例 1：
输入：x = 4
输出：2
示例 2：
输入：x = 8
输出：2
解释：8 的算术平方根是 2.82842..., 由于返回类型是整数，小数部分将被舍去。
提示：
0 <= x <= 231 - 1
*/
public class Test69 {
    public int mySqrt(int x) {
        if (x==0){
            return 0;
        }
        //在区间[1,x]的二分查找
        //搜索区间从1开始
        int i=1;
        //搜索区间到x截止
        int j=x;
        while (i<=j){
            //取中点
            int m=i+(j-i)/2;
            //当m的平方小于等于x时
            if (m<=x/m){
                //判断m是不是最大的平方数小于x的数字
                if ((m+1)>x/(m+1)){
                    return m;
                }
                //如果m不是最小的m，那么就继续向后搜索
                i=m+1;
            }
            //如果m平方大了，就向数组的前半部分搜索
            else {
                j=m-1;
            }
        }
        return -1;
    }
}
